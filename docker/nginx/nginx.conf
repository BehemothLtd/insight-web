user nginx;
worker_processes 1;

error_log stderr warn;
pid /run/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  access_log /dev/stdout;

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  server_tokens off;

  keepalive_timeout 65;

  gzip on;
  gzip_http_version 1.0;
  gzip_comp_level 2;
  gzip_proxied any;
  gzip_vary off;
  gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript application/json;
  gzip_min_length 1000;
  gzip_disable "MSIE [1-6]\.";

  client_max_body_size 256M;
  server_names_hash_bucket_size 64;
  types_hash_max_size 2048;
  types_hash_bucket_size 64;

  # use this when need to record response time.
  log_format timed_combined '$remote_addr - $remote_user [$time_iso8601] '
  '"$request" $status $body_bytes_sent '
  '"$http_referer" "$http_user_agent" '
  '$request_time $upstream_response_time';

  server {
    listen 6060;
    access_log /dev/stdout timed_combined;
    error_log stderr warn;
    index index.html index.htm;

    root /srv/www;

    location / {
      index  index.html;
      try_files $uri $uri/ /index.html;
    }

    location = /healthz {
      allow 10.0.0.0/8;
      allow 172.16.0.0/12;
      allow 192.168.0.0/16;
      deny all;

      add_header Content-Type text/plain;
      return 200 "ok";
    }
  }
}
